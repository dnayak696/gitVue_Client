{"remainingRequest":"/Users/thedkn/Desktop/GitVue/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thedkn/Desktop/GitVue/client/src/components/GitRepo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/thedkn/Desktop/GitVue/client/src/components/GitRepo.vue","mtime":1627637479046},{"path":"/Users/thedkn/Desktop/GitVue/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thedkn/Desktop/GitVue/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/thedkn/Desktop/GitVue/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thedkn/Desktop/GitVue/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgVnVleCBmcm9tICd2dWV4JwppbXBvcnQgY3JlYXRlUGVyc2lzdGVkU3RhdGUgZnJvbSAndnVleC1wZXJzaXN0ZWRzdGF0ZSc7CgoKClZ1ZS51c2UoVnVleCkKCmNvbnN0IHN0b3JlID0gbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICAgb3duZXI6Im5vZGVqcyIsCiAgICAgcmVwbzogIm5vZGUiLAogICAgIHVzZXJOYW1lOiAiICIsCiAgICAgb2ZmVXNlckVudHJ5OiB0cnVlLAogICAgIHN1Y2Nlc3M6IGZhbHNlLAogICAgIGVycm9yOiBmYWxzZSwKICB9LAogIHBsdWdpbnM6IFtjcmVhdGVQZXJzaXN0ZWRTdGF0ZSgpXSwKICBtdXRhdGlvbnM6IHsKICAgIGNoYW5nZU93bmVyOiAoc3RhdGUsIG5ld093bmVyKSA9PiBzdGF0ZS5vd25lciA9IG5ld093bmVyLAogICAgY2hhbmdlUmVwbzogKHN0YXRlLHJlcG8pPT4gc3RhdGUucmVwbyA9IHJlcG8sCiAgICBzZXRVc2VyTmFtZTogKHN0YXRlLCBuZXdVc2VyKSA9PnN0YXRlLnVzZXJOYW1lPSBuZXdVc2VyICwKICAgIHNldE9mZlVzZXJFbnRyeTogc3RhdGUgPT4gc3RhdGUub2ZmVXNlckVudHJ5ID0gZmFsc2UsCiAgICBzZXRTdWNjZXNzOiAoc3RhdGUsYm9vbCkgPT4gc3RhdGUuc3VjY2VzcyA9IGJvb2wsCiAgICBzZXRFcnJvcjogKHN0YXRlLGJvb2wpID0+IHN0YXRlLmVycm9yID0gYm9vbCwKICB9Cn0pOwoKCgoKCgpleHBvcnQgZGVmYXVsdHsKICAgYXBvbGxvOiB7CiAgICAvLyBTaW1wbGUgcXVlcnkgdGhhdCB3aWxsIHVwZGF0ZSB0aGUgJ2hlbGxvJyB2dWUgcHJvcGVydHkKICBnZXRDb250cmlidXRvcnM6IGdxbGBxdWVyeSB7CiAgICAgIGdldENvbnRyaWJ1dG9ycyhvd25lcjoibm9kZWpzIiAscmVwbzoibm9kZSIpewogICBsb2dpbiwKICAgY29udHJpYnV0aW9ucwogIH0KICAgIH1gLAogIH0sCgoKICBkYXRhOiBmdW5jdGlvbigpewogICAgICAgcmV0dXJueyAKLy9OZWNlc3NhcnlEYXRhCiAgICAgICAKICAgICAgICAgb2ZmVXNlckVudHJ5OiBzdG9yZS5zdGF0ZS5vZmZVc2VyRW50cnksCiAgICAgICAgIHVzZXJOYW1lOnN0b3JlLnN0YXRlLnVzZXJOYW1lLAogICAgICAgICBvd25lcjogc3RvcmUuc3RhdGUub3duZXIsCiAgICAgICAgIHJlcG86c3RvcmUuc3RhdGUucmVwbywKICAgICAgICAgc3VjY2Vzczogc3RvcmUuc3RhdGUuc3VjY2VzcywKICAgICAgICAgZXJyb3I6IHN0b3JlLnN0YXRlLmVycm9yLAoKICAgICAgICAgLy9DaGFydCBEYXRhCgogICAgY2hhcnREYXRhOiBbXSwKICAgIHR5cGU6ICdwaWUyZCcsCiAgICB3aWR0aDogJzEwMCUnLAogICAgaGVpZ2h0OiAnNTAwJywKICAgIGRhdGFGb3JtYXQ6ICdqc29uJywKICAgIGRhdGE6IHsKICAgIGNhcHRpb246ICJUb3AgNTAgQ29udHJpYnV0b3JzIGluIHRoaXMgcmVwbyIsCiAgICBwbG90dG9vbHRleHQ6ICI8Yj4kcGVyY2VudFZhbHVlPC9iPiBvZiB3ZWIgc2VydmVycyBydW4gb24gJGxhYmVsIHNlcnZlcnMiLAogICAgc3ViY2FwdGlvbjogIiBpbiBwaWUgY2hhcnQiLAogICAgeGF4aXNuYW1lOiAiQ291bnRyeSIsCiAgICB5YXhpc25hbWU6ICJSZXNlcnZlcyAoTU1iYmwpIiwKICAgIG51bWJlcnN1ZmZpeDogIksiLAogICAgdGhlbWU6ICJmdXNpb24iLAogICAgc2hvd2xlZ2VuZDogIjAiCiAgfSwKICAgIGRhdGFTb3VyY2U6ewogICAgICAgIGNoYXJ0OiB0aGlzLmRhdGEsCiAgZGF0YTogdGhpcy5jaGFydERhdGEKICB9LAoKICAgICAgfQogICAgfSwKCgogCiAgIG1vdW50ZWQgKCkgewogICAgICAKICAgY29uc29sZS5sb2codGhpcy5nZXRDb250cmlidXRvcnMpOwogY29uc3QgdXNlck5hbWUgPSAgc3RvcmUuc3RhdGUudXNlck5hbWU7IAogICAKc2V0VGltZW91dCgoKT0+ewp0aGlzLnNldERhdGFUb0NoYXJ0KHRoaXMuZ2V0Q29udHJpYnV0b3JzKTsKaWYodGhpcy5nZXRDb250cmlidXRvcnMpewogIHRoaXMuc2V0RGF0YVRvQ2hhcnQodGhpcy5nZXRDb250cmlidXRvcnMpCiB9CiAgICAgIH0sIDE1MDApCiAKCgoKIGlmKHVzZXJOYW1lKXsKICAgICBzdG9yZS5jb21taXQoJ3NldE9mZlVzZXJFbnRyeScpCiAgIHRoaXMudXNlck5hbWUgPSB1c2VyTmFtZTsKICAgICAgfQogCiAgCiB9LAptZXRob2RzOnsKICAgICAgYWRkTmFtZSgpewogICAgICAgaWYodGhpcy51c2VyTmFtZSl7CiAgICAgICAgIGNvbnN0IHVzZXJOYW1lPXRoaXMudXNlck5hbWUKICBzdG9yZS5jb21taXQoJ3NldFVzZXJOYW1lJywgdXNlck5hbWUgKTsKICBzdG9yZS5jb21taXQoICdzZXRPZmZVc2VyRW50cnknKTsKICB0aGlzLm9mZlVzZXJFbnRyeSA9IGZhbHNlOwogIHJldHVybjsKICAgICAgICB9CiAgcmV0dXJuIG51bGw7CiAgICAgIH0sCgogIHNldERhdGFUb0NoYXJ0KGRhdGEpewogICAgaWYoZGF0YSl7CiAgICAgdGhpcy5jaGFydERhdGEgPSBkYXRhLm1hcChkYXRhMT0+ewogICAgICAgIGNvbnN0IG5hbWUgPSBgSGkgJHtkYXRhMS5sb2dpbn0geW91ciBkaXN0cmlidXRpb24gb2YgZmlyc3QgNTAgY29udHJpYnV0b3JzIGFyZWAKICAgICAgICBjb25zdCBkYXRhPSB7CiAgICAgICAgICBsYWJlbDogbmFtZSwKICAgICAgICAgIHZhbHVlOiAgZGF0YTEuY29udHJpYnV0aW9ucwogICAgICAgIH0gCiAgICAgICAgcmV0dXJuIGRhdGE7CiAgICAgIH0pOwoKICAgICAgY29uc29sZS5sb2codGhpcy5jaGFydERhdGEpOwoKICAgICAgdGhpcy5kYXRhU291cmNlICA9ewogICAgICAgICBjaGFydDogdGhpcy5kYXRhLAogICAgICBkYXRhOiB0aGlzLmNoYXJ0RGF0YQogICAgICB9CgogICAgfWlmKCFkYXRhKXsKICAgICAgIHRoaXMuZGF0YVNvdXJjZSAgPXsKICAgICAgICAgY2hhcnQ6IG51bGwsCiAgICAgIGRhdGE6IG51bGwKICAgICAgfQogICAgfQogCiAgICAgIH0sCgogICBhc3luYyAgc2VhcmNoUmVwbygpewogICAgICB0aGlzLnN1Y2Nlc3MgPSBmYWxzZTsKICAgICAgdGhpcy5lcnJvciA9IGZhbHNlOwogICAgdHJ5ewpjb25zdCByZXNwb25jZSA9IGF3YWl0IHRoaXMuJGFwb2xsby5tdXRhdGUoewogICAgICAvLyBRdWVyeQogICAgICBtdXRhdGlvbjogZ3FsYG11dGF0aW9uKCRvd25lcjogU3RyaW5nLCAkcmVwbzpTdHJpbmcpewogIGdldENvbnRyaWJ1dG9ycyhvd25lcjokb3duZXIscmVwbzokcmVwbyl7CiAgbG9naW4sCiAgY29udHJpYnV0aW9ucwogIH0KfWAsIAogLy8gUGFyYW1ldGVycwogICAgICB2YXJpYWJsZXM6IHsKICAgICAgICBvd25lcjogdGhpcy5vd25lciwKICAgICAgICByZXBvOiB0aGlzLnJlcG8KICAgICAgfSwKICAgIH0pOwogICAgCgogICAgIAogICAgIAogICAgY29uc3QgZGF0YSA9IHJlc3BvbmNlLmRhdGEuZ2V0Q29udHJpYnV0b3JzOwogICAgaWYoZGF0YSl7CiAgICAgIHRoaXMuc3VjY2VzcyA9dHJ1ZTsKICAgICAgdGhpcy5zZXREYXRhVG9DaGFydChkYXRhKTsKICAgIH1lbHNlewogICAgIHRoaXMuZXJyb3IgPSB0cnVlOwp0aGlzLnNldERhdGFUb0NoYXJ0KG51bGwpOwogICAgfQoKICAgIH1jYXRjaChlcnIpewogICAgICBjb25zb2xlLmxvZyhlcnIubWVzc2FnZSk7CiAgICB9IAoKICAgICAKCiAgIH0KICAgfSwKICAgIAogICAgCiAgICAgICAKICAgICAgICB9CgoK"},{"version":3,"sources":["GitRepo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;;;AAIA","file":"GitRepo.vue","sourceRoot":"src/components","sourcesContent":["\n\n<template>\n    <div >\n        <div class=\"header\"> \n            <h2 style=\"color: white;\" > Git Repo  <span style=\"color: black ; margin-right:100px;\"> {{owner}}/{{repo}}</span> <span></span>\n            {{userName}}\n            </h2>\n        </div>\n        <div class=\"form-container\">\n\n        <!-- Enter your name  -->\n\n    <div class=\"form-inline\" style=\"background-color: red;\"  v-if=\"offUserEntry\">\n      <h3 >Please Enter Your name</h3>\n  <input v-model=\"userName\" placeholder=\"Name\">\n <button @click=\"addName\"> Submit User Name</button>\n    </div>\n\n      <div class=\"form-inline\" >\n  <label >Repo Owner</label>\n  <input v-model=\"owner\" placeholder=\"vuejs\">\n  <label >\n    Repo Name\n  </label>\n  <input v-model=\"repo\"  placeholder=\"vuefire\" >\n  \n  <button @click=\"searchRepo\"> Search Repo</button>\n\n</div>\n        </div>\n        <div> \n          <h1 v-if=\"success\">Successfully found the information</h1>\n          <h1 v-if=\"error\">Error occur</h1>\n        </div>\n        <div class=\"main-content\" >\n\n         <!-- <div id=\"chart\">\n     <apexchart type=\"pie\" width=\"380\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n      </div> -->\n     <fusioncharts\n      :type=\"type\"\n      :width=\"width\"\n      :height=\"height\"\n      :dataFormat=\"dataFormat\"\n      :dataSource=\"dataSource\"\n      >\n      </fusioncharts>\n\n\n      </div>\n        </div>     \n   \n  \n</template>\n\n\n<script>\nimport gql from 'graphql-tag'\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate';\n\n\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  state: {\n     owner:\"nodejs\",\n     repo: \"node\",\n     userName: \" \",\n     offUserEntry: true,\n     success: false,\n     error: false,\n  },\n  plugins: [createPersistedState()],\n  mutations: {\n    changeOwner: (state, newOwner) => state.owner = newOwner,\n    changeRepo: (state,repo)=> state.repo = repo,\n    setUserName: (state, newUser) =>state.userName= newUser ,\n    setOffUserEntry: state => state.offUserEntry = false,\n    setSuccess: (state,bool) => state.success = bool,\n    setError: (state,bool) => state.error = bool,\n  }\n});\n\n\n\n\n\n\nexport default{\n   apollo: {\n    // Simple query that will update the 'hello' vue property\n  getContributors: gql`query {\n      getContributors(owner:\"nodejs\" ,repo:\"node\"){\n   login,\n   contributions\n  }\n    }`,\n  },\n\n\n  data: function(){\n       return{ \n//NecessaryData\n       \n         offUserEntry: store.state.offUserEntry,\n         userName:store.state.userName,\n         owner: store.state.owner,\n         repo:store.state.repo,\n         success: store.state.success,\n         error: store.state.error,\n\n         //Chart Data\n\n    chartData: [],\n    type: 'pie2d',\n    width: '100%',\n    height: '500',\n    dataFormat: 'json',\n    data: {\n    caption: \"Top 50 Contributors in this repo\",\n    plottooltext: \"<b>$percentValue</b> of web servers run on $label servers\",\n    subcaption: \" in pie chart\",\n    xaxisname: \"Country\",\n    yaxisname: \"Reserves (MMbbl)\",\n    numbersuffix: \"K\",\n    theme: \"fusion\",\n    showlegend: \"0\"\n  },\n    dataSource:{\n        chart: this.data,\n  data: this.chartData\n  },\n\n      }\n    },\n\n\n \n   mounted () {\n      \n   console.log(this.getContributors);\n const userName =  store.state.userName; \n   \nsetTimeout(()=>{\nthis.setDataToChart(this.getContributors);\nif(this.getContributors){\n  this.setDataToChart(this.getContributors)\n }\n      }, 1500)\n \n\n\n\n if(userName){\n     store.commit('setOffUserEntry')\n   this.userName = userName;\n      }\n \n  \n },\nmethods:{\n      addName(){\n       if(this.userName){\n         const userName=this.userName\n  store.commit('setUserName', userName );\n  store.commit( 'setOffUserEntry');\n  this.offUserEntry = false;\n  return;\n        }\n  return null;\n      },\n\n  setDataToChart(data){\n    if(data){\n     this.chartData = data.map(data1=>{\n        const name = `Hi ${data1.login} your distribution of first 50 contributors are`\n        const data= {\n          label: name,\n          value:  data1.contributions\n        } \n        return data;\n      });\n\n      console.log(this.chartData);\n\n      this.dataSource  ={\n         chart: this.data,\n      data: this.chartData\n      }\n\n    }if(!data){\n       this.dataSource  ={\n         chart: null,\n      data: null\n      }\n    }\n \n      },\n\n   async  searchRepo(){\n      this.success = false;\n      this.error = false;\n    try{\nconst responce = await this.$apollo.mutate({\n      // Query\n      mutation: gql`mutation($owner: String, $repo:String){\n  getContributors(owner:$owner,repo:$repo){\n  login,\n  contributions\n  }\n}`, \n // Parameters\n      variables: {\n        owner: this.owner,\n        repo: this.repo\n      },\n    });\n    \n\n     \n     \n    const data = responce.data.getContributors;\n    if(data){\n      this.success =true;\n      this.setDataToChart(data);\n    }else{\n     this.error = true;\nthis.setDataToChart(null);\n    }\n\n    }catch(err){\n      console.log(err.message);\n    } \n\n     \n\n   }\n   },\n    \n    \n       \n        }\n\n\n</script>\n\n\n<style  scoped>\n   .header{\n     text-align: center;\n     padding: 15px;\n        height: 50px;\n        background-color: rgb(56, 209, 209);\n        justify-content: center;\n        align-self: center;\n        font-style: italic;\n   }\n   .main-content{\n        display: flex;\n        justify-content: center;\n   }\n   .form-inline {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  background-color: rgb(243, 232, 128);\n  padding: 10px;\n}\n\n/* Add some margins for each label */\n.form-inline label {\n  margin: 5px 10px 5px 0;\n}\n\n/* Style the input fields */\n.form-inline input {\n  vertical-align: middle;\n  margin: 5px 10px 5px 0;\n  padding: 10px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n}\n\n/* Style the submit button */\n.form-inline button {\n  padding: 10px 20px;\n  background-color: #65da9f;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  color: white;\n}\n\n.form-inline button:hover {\n  background-color: rgb(69, 172, 66);\n}\n\n/* Add responsiveness - display the form controls vertically instead of horizontally on screens that are less than 800px wide */\n@media (max-width: 800px) {\n  .form-inline input {\n    margin: 10px 0;\n  }\n\n  .form-inline {\n    flex-direction: column;\n    align-items: stretch;\n  }\n}\n</style>\n"]}]}